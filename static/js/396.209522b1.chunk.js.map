{"version":3,"file":"static/js/396.209522b1.chunk.js","mappings":"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","sources":["components/MovieList/MoviesList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","service/Api.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport propTypes from 'prop-types';\n\n\nexport const List = styled.ul`\n  list-style: circle;\n  text-decoration: underline;\n  \n`;\n\nexport const LinkDetails = styled(Link)`\n  \n`;\n\nLinkDetails.propTypes = {\n  cover: propTypes.string,\n  placeholder: propTypes.string,\n};\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { List, LinkDetails} from './MoviesList.styled';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(movie => (\n        <li key={movie.id}>\n          <LinkDetails\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            cover={movie.poster_path}\n          >\n            {movie.title}\n          </LinkDetails>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Form = styled.form`\n  /* display: flex;\n  align-items: center;\n  gap: 1.5rem;\n  padding: 0 16px;\n  flex-wrap: wrap;\n\n  input {\n    font-size: 1rem;\n    padding: 8px 32px 8px 8px;\n    width: 250px;\n    background-color: transparent;\n    border: none;\n    border-bottom: 2px solid #064e8a;\n    outline: none;\n  } */\n`;\n\nexport const Icon = styled(FcSearch)`\n  /* width: 25px;\n  height: 25px;\n  position: relative;\n  right: 56px;\n  z-index: 1;\n  opacity: 0.7; */\n`;\n","import { DebounceInput } from 'react-debounce-input';\nimport propTypes from 'prop-types';\n\nimport { Form, Icon } from './SearchForm.styled';\n\nexport const SearchForm = ({ value, onChange }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <h2>Movie Search</h2>\n      <DebounceInput\n        type=\"text\"\n        debounceTimeout={500}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        placeholder=\"type here\"\n      />\n      <Icon />\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  value: propTypes.string,\n  onChange: propTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nimport { handleSearch } from 'service/Api';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  const [loading, setLoading] = useState(false);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' && { query };\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        setLoading(true);\n        const movies = await handleSearch(movieName);\n        setSearchResults(movies);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    search();\n  }, [movieName]);\n\n  return (\n    <div>\n      <SkeletonTheme baseColor=\"#dddddd\" highlightColor=\"#a5a5a5\">\n        <SearchForm value={movieName} onChange={updateQueryString} />\n        {loading ? (\n          <Skeleton\n            count={15}\n            style={{ height: 30, width: 300, marginTop: 15 }}\n          />\n        ) : searchResults.length === 0 && movieName ? (\n          <h2>ðŸ”Ž Nothing found</h2>\n        ) : (\n          <MovieList films={searchResults} />\n        )}\n      </SkeletonTheme>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '0fd9879f4fdecd30dddd6a5b345c8188';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","LinkDetails","Link","_templateObject2","propTypes","cover","placeholder","_ref","films","location","useLocation","_jsx","children","map","movie","to","concat","id","state","from","poster_path","title","Form","Icon","FcSearch","SearchForm","value","onChange","_jsxs","onSubmit","e","preventDefault","DebounceInput","type","debounceTimeout","target","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","_useState3","_useState4","loading","setLoading","useEffect","search","_asyncToGenerator","_regeneratorRuntime","_callee","movies","_context","prev","next","handleSearch","sent","t0","console","error","finish","stop","apply","arguments","SkeletonTheme","baseColor","highlightColor","query","Skeleton","count","style","height","width","marginTop","length","MovieList","axios","params","api_key","language","fetchTrendingMovies","response","abrupt","data","results","fetchMovieDetails","_ref2","_callee2","movieId","_context2","_x","_ref3","_callee3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}